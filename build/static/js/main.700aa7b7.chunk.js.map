{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Red","Yellow","GreenCircle","props","winning","Container","variant","className","style","backgroundColor","maxWidth","height","Box","col","symbol","color","Col","pointerEvents","onClick","handleClick","width","Board","winningMoves","board","i","r","row","c","reduce","y","x","grid","Row","Game","state","turn","makeEmptyArr","winner","bind","handleReset","arr","NROWS","score","console","log","NCOLS","length","this","currturn","dropPiece","checkWin","win","setState","msg","opacity","Button","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.700aa7b7.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nimport {Button, Container, Row, Col} from \"react-bootstrap\"\n\nconst NROWS = 6;\nconst NCOLS = 7;\nconst Red = \"Red\";\nconst Yellow = \"Yellow\";\n\nfunction GreenCircle(props){    //Display winning move\n  if(props.winning){\n    return (\n      <Container \n        variant=\"success\" \n        className={\"rounded-circle\"} \n        style={\n          {\n            backgroundColor: \"green\",\n            maxWidth: \"50%\",\n            height: \"50%\"\n          }\n        }\n      />\n    );\n  } else {\n    return null;\n  }\n}\n\nfunction Box(props){\n  const col = props.col;\n  const symbol = props.symbol;\n  const color = symbol === \" \" \n                ? \"white\"\n                : symbol === Yellow\n                ? \"yellow\"\n                : \"red\";\n  return (\n        <Col  \n          className=\"d-flex justify-items-center align-items-center p-0\" //d-flex necessary\n          style={\n            { \n              pointerEvents:\"all\",\n              backgroundColor : \"blue\",\n              maxWidth: \"100px\",\n              height: \"100px\"\n            }\n          } \n          onClick={()=>props.handleClick(col)}\n        >\n            <Container\n              className=\"rounded-circle d-flex align-items-center justify-content-center\" \n              style={\n                {\n                  backgroundColor: color,\n                  width: \"95%\",\n                  height: \"95%\"\n                }\n              }> <GreenCircle winning={props.winning}/> </Container>  \n        </Col>\n      );\n}\n\nfunction Board(props){\n  const winningMoves = props.winningMoves;\n  const board = [];\n  let i = 0;\n  for(let r = 0; r < NROWS; r++){\n    const row = [];\n    for(let c = 0; c < NCOLS; c++){\n      const winning = winningMoves.reduce(\n                        (y, x) => y || (x[0]===r && x[1]===c),\n                        false);\n      row[c] = <Box key={i++} col={c} symbol={props.grid[r][c]} handleClick={props.handleClick} winning={winning}/>\n    }\n    board[r] = <Row className=\"d-flex justify-content-center flex-nowrap\" key={r}>{row}</Row>;\n  }\n  return board;\n}\n    \nclass Game extends React.Component{\n  makeEmptyArr(){\n    let arr = [];\n    for(let r = 0; r < NROWS; r++){\n      let row = [];\n      for(let c = 0; c<NCOLS; c++){\n        row[c] = \" \";\n      }\n      arr[r] = row;\n    }\n    return arr;\n  }\n\n  constructor(props){\n    super(props);\n    this.state = {turn: Red, grid: this.makeEmptyArr(), winner: \" \", winningMoves:[]};\n    this.handleClick = this.handleClick.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n  }\n\n  dropPiece(symbol, col, grid){\n    for(let r=NROWS-1; r>=0; r--){\n      if(grid[r][col] === \" \"){\n        grid[r][col] = symbol;\n        return true;\n      }\n    }\n    return false;\n  }\n\n  checkWin(grid){\n    for(let r = 0; r < NROWS; r++){\n      let score = 1;\n      let state = grid[r][0];\n      for(let c = 1; c < NCOLS; c++){\n        if(grid[r][c] === state){\n          if(state !== \" \"){\n            score++;\n          }\n        } else {\n          state = grid[r][c];\n          score = 1;\n        }\n        if(score >= 4){\n          let arr = [];\n          for(let i = 0; i < 4; i++){\n            arr[i] = [r,c-i];\n          }\n          console.log(\"from rows\");\n          console.log(arr);\n          return [grid[r][c], arr];\n        }\n      }\n    }\n    for(let c = 0; c < NCOLS; c++){\n      let score = 0;\n      let state = grid[0][c];\n      for(let r = 0; r < NROWS; r++){\n        if(grid[r][c] === state){\n          if(state !== \" \"){\n            score++;\n          }\n        } else {\n          state = grid[r][c];\n          score = 1;\n        }\n        if(score >= 4){\n          let arr = [];\n          for(let i = 0; i < 4; i++){\n            arr[i] = [r-i,c];\n          }\n          console.log(\"from columns\");\n          console.log(arr);\n          return [grid[r][c], arr];\n        }\n      }\n    }\n    for(let r = 0; r < NROWS - 3; r++){\n      for(let c = 0; c < NCOLS - 3; c++){\n        let state = grid[r][c];\n        if(state !== \" \"){\n          let arr = [[r,c]];\n          for(let i = 1; i < 4; i++){\n            if(grid[r+i][c+i] === state){\n              arr[i] = [r+i, c+i];\n            } else {\n              break;\n            }\n          }\n          if(arr.length >= 4){\n            console.log(\"from diag1\")\n            console.log(arr);\n            return [state, arr];\n          }\n        }\n      }\n    }\n    for(let r = 3; r < NROWS; r++){\n      for(let c = 0; c < NCOLS - 3; c++){\n        let state = grid[r][c];\n        if(state !== \" \"){\n          let arr = [[r,c]];\n          for(let i = 1; i < 4; i++){\n            if(grid[r-i][c+i] === state){\n              arr[i] = [r-i, c+i];\n            } else {\n              break;\n            }\n          }\n          if(arr.length >= 4){\n            console.log(\"from diag2\");\n            console.log(arr);\n            return [state, arr]\n          }\n        }\n      }\n    }\n    return [\" \", []];\n  }\n\n  handleClick(col){\n    if(this.state.winner !== \" \"){\n      return;\n    }\n    const currturn = this.state.turn;\n    if(this.dropPiece(currturn, col, this.state.grid)){\n      const [win, winningMoves] = this.checkWin(this.state.grid);\n      this.setState({\n        turn: currturn === Red ? Yellow : Red,   //Usually should update grid without mutation but shouldnt be a problem as turn is updated\n        grid: this.state.grid,\n        winner: win,\n        winningMoves: winningMoves\n      })\n    }\n    console.log(this.state.grid);\n  }\n\n  handleReset(){\n    this.setState({turn: Red, grid: this.makeEmptyArr(), winner: \" \", winningMoves: []});\n  }\n\n  render(){\n    const winner = this.state.winner;\n    const msg = winner === \" \"\n                ? \"It is currently \" + this.state.turn + \"'s turn\"\n                : \"Game Over! \" + this.state.winner + \" has won the game!\";\n    const opacity = winner === \" \" ? 100: 50;\n    return (\n      <div>\n        \n        <Container className={\"opacity-\" + opacity}>\n          <Board grid={this.state.grid} handleClick={this.handleClick} winningMoves={this.state.winningMoves}/>\n        </Container>\n        <h1>{msg}</h1>\n        <Button className=\"m-5 lg\" onClick={this.handleReset}>Reset the Board</Button>\n      </div>\n    )\n  }\n}\n\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{backgroundColor:'azure'}}>\n      <h1>Connect 4 with react-bootstrap by Stanley</h1>\n      <Game/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}